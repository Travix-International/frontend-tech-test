// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ModalComponent Snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ModalComponent
    open={true}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "portal",
    "props": Object {
      "children": <React.Fragment>
        <ForwardRef
          onKeyDown={[Function]}
        />
        <ForwardRef
          onKeyDown={[Function]}
        />
      </React.Fragment>,
      "containerInfo": <body />,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <ForwardRef
            onKeyDown={[Function]}
          />,
          <ForwardRef
            onKeyDown={[Function]}
          />,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": undefined,
            "onKeyDown": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bdVaJa",
              "isStatic": true,
              "rules": Array [
                "
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: #fff;
  box-shadow: 0px 3px 5px -1px rgba(0,0,0,0.2), 0px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12);
  background: rgb(255, 255, 255);
  padding: 1.5rem;
  border-radius: .4rem;
  z-index: 100;
  animation: ",
                Keyframes {
                  "id": "sc-keyframes-bcCCNc",
                  "inject": [Function],
                  "name": "bcCCNc",
                  "rules": Array [
                    "@-webkit-keyframes bcCCNc{0%{opacity:0;}100%{opacity:1;}}",
                    "@keyframes bcCCNc{0%{opacity:0;}100%{opacity:1;}}",
                  ],
                  "toString": [Function],
                },
                " 500ms ease;
",
              ],
            },
            "displayName": "styled.div",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bdVaJa",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "onClick": undefined,
            "onKeyDown": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-bwzfXH",
              "isStatic": true,
              "rules": Array [
                "
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, .5);
  z-index: 50;
  animation: ",
                Keyframes {
                  "id": "sc-keyframes-bcCCNc",
                  "inject": [Function],
                  "name": "bcCCNc",
                  "rules": Array [
                    "@-webkit-keyframes bcCCNc{0%{opacity:0;}100%{opacity:1;}}",
                    "@keyframes bcCCNc{0%{opacity:0;}100%{opacity:1;}}",
                  ],
                  "toString": [Function],
                },
                " 500ms ease;
",
              ],
            },
            "displayName": "ModalContainer",
            "foldedComponentIds": Array [],
            "render": [Function],
            "styledComponentId": "sc-bwzfXH",
            "target": "div",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Symbol(react.fragment),
    },
    "type": Symbol(react.portal),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "portal",
      "props": Object {
        "children": <React.Fragment>
          <ForwardRef
            onKeyDown={[Function]}
          />
          <ForwardRef
            onKeyDown={[Function]}
          />
        </React.Fragment>,
        "containerInfo": <body />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <ForwardRef
              onKeyDown={[Function]}
            />,
            <ForwardRef
              onKeyDown={[Function]}
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": undefined,
              "onKeyDown": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bdVaJa",
                "isStatic": true,
                "rules": Array [
                  "
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: #fff;
  box-shadow: 0px 3px 5px -1px rgba(0,0,0,0.2), 0px 5px 8px 0px rgba(0,0,0,0.14), 0px 1px 14px 0px rgba(0,0,0,0.12);
  background: rgb(255, 255, 255);
  padding: 1.5rem;
  border-radius: .4rem;
  z-index: 100;
  animation: ",
                  Keyframes {
                    "id": "sc-keyframes-bcCCNc",
                    "inject": [Function],
                    "name": "bcCCNc",
                    "rules": Array [
                      "@-webkit-keyframes bcCCNc{0%{opacity:0;}100%{opacity:1;}}",
                      "@keyframes bcCCNc{0%{opacity:0;}100%{opacity:1;}}",
                    ],
                    "toString": [Function],
                  },
                  " 500ms ease;
",
                ],
              },
              "displayName": "styled.div",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bdVaJa",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "onClick": undefined,
              "onKeyDown": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "attrs": Array [],
              "componentStyle": ComponentStyle {
                "componentId": "sc-bwzfXH",
                "isStatic": true,
                "rules": Array [
                  "
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, .5);
  z-index: 50;
  animation: ",
                  Keyframes {
                    "id": "sc-keyframes-bcCCNc",
                    "inject": [Function],
                    "name": "bcCCNc",
                    "rules": Array [
                      "@-webkit-keyframes bcCCNc{0%{opacity:0;}100%{opacity:1;}}",
                      "@keyframes bcCCNc{0%{opacity:0;}100%{opacity:1;}}",
                    ],
                    "toString": [Function],
                  },
                  " 500ms ease;
",
                ],
              },
              "displayName": "ModalContainer",
              "foldedComponentIds": Array [],
              "render": [Function],
              "styledComponentId": "sc-bwzfXH",
              "target": "div",
              "toString": [Function],
              "warnTooManyClasses": [Function],
              "withComponent": [Function],
            },
          },
        ],
        "type": Symbol(react.fragment),
      },
      "type": Symbol(react.portal),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`ModalComponent Snapshot without nothing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ModalComponent
    open={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
